# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]

jobs:
  test:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 8.44.0
    - name: Run Tests
      run: mvn -B test --file pom.xml
 
  build:
   runs-on: ubuntu-latest
   needs: [test]
   steps:
    - uses: actions/checkout@v2
  
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 8.44.0
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file  
    
    - name: Generate build number
      uses: einaregilsson/build-number@v2 
      with:
        token: ${{secrets.github_token}}        
    
    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    
    - name: Build with maven
      run: mvn -B package -Dmaven.test.skip=true -Drevision=$BUILD_NUMBER --file pom.xml
    
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -Drevision=$BUILD_NUMBER -Dmaven.test.skip=true -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
    - name: Build and publish docker image to GitHub Packages Docker registry
      run: mvn -Dmaven.test.skip=true -Drevision=$BUILD_NUMBER -Ddocker -Ddocker.username=$GITHUB_ACTOR -Ddocker.password=$REPO_TOKEN --file pom.xml package docker:build docker:push
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}     
